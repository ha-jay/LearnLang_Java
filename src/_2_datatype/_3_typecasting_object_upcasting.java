package _2_datatype;

public class _3_typecasting_object_upcasting {
    public static void main(String[] args) {
        //upcasting - 자식클래스를 부모클래스로 변환(상속관계에 있어야한다.)
        //upcasting을하면 참조변수가 부모클래스타입이므로, 부모클래스에 정의된 기능만 사용할수 있습니다. 
            //자식클래스의 고유기능에는 접근할 수 없습니다. 만약호출하면 컴파일에러가 발생합니다.
        //메서드 실행시점에, 만약 자식클래스에 오버라이딩된 메서드가 있다면, 자식클래스의 메서드가 호출됩니다.
        //이것은 부모클래스가 인터페이스 처럼 동작하는 것 같다. 


        //메모리 관점에서의 이해
        //먼저 부모클래스의 영역이 메모리에 만들어지고, 그위에 자식클래스의 영역이 만들어 집니다. 
        //upcasting을하면 부모클래스의 영역을 참조하게 됩니다. 
        //이때 부모클래스의 영역에는 자식클래스의 고유기능이 없습니다. 
        //메서드 실행시점에, 만약 자식클래스에 오버라이딩된 메서드가 있다면, 자식클래스의 메서드가 호출됩니다.
        Animal animal = new Cat(); // upcasting : 자식클래스를 부모타입으로 변환 (부모가 더 큰 타입이므로 자동형변환)
        animal.sound(); // 실행시점에 Cat의 eat() 메소드 호출 (동적 바인딩)
        ////부모클래스로 자식의 eat()호출
       
       
    }
}